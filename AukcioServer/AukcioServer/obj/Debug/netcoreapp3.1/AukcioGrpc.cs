// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/aukcio.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace AukcioServer {
  public static partial class BiddingApp
  {
    static readonly string __ServiceName = "greet.BiddingApp";

    static readonly grpc::Marshaller<global::AukcioServer.LoginRequest> __Marshaller_greet_LoginRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.LoginRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.LoginResponse> __Marshaller_greet_LoginResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.LoginResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.LogoutRequest> __Marshaller_greet_LogoutRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.LogoutRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.LogoutResponse> __Marshaller_greet_LogoutResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.LogoutResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.ListRequest> __Marshaller_greet_ListRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.ListRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.ListResponse> __Marshaller_greet_ListResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.ListResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.AddProductRequest> __Marshaller_greet_AddProductRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.AddProductRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.AddProductResponse> __Marshaller_greet_AddProductResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.AddProductResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.BidRequest> __Marshaller_greet_BidRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.BidRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AukcioServer.BidResponse> __Marshaller_greet_BidResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AukcioServer.BidResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::AukcioServer.LoginRequest, global::AukcioServer.LoginResponse> __Method_Login = new grpc::Method<global::AukcioServer.LoginRequest, global::AukcioServer.LoginResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_greet_LoginRequest,
        __Marshaller_greet_LoginResponse);

    static readonly grpc::Method<global::AukcioServer.LogoutRequest, global::AukcioServer.LogoutResponse> __Method_Logout = new grpc::Method<global::AukcioServer.LogoutRequest, global::AukcioServer.LogoutResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Logout",
        __Marshaller_greet_LogoutRequest,
        __Marshaller_greet_LogoutResponse);

    static readonly grpc::Method<global::AukcioServer.ListRequest, global::AukcioServer.ListResponse> __Method_List = new grpc::Method<global::AukcioServer.ListRequest, global::AukcioServer.ListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_greet_ListRequest,
        __Marshaller_greet_ListResponse);

    static readonly grpc::Method<global::AukcioServer.AddProductRequest, global::AukcioServer.AddProductResponse> __Method_AddProduct = new grpc::Method<global::AukcioServer.AddProductRequest, global::AukcioServer.AddProductResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProduct",
        __Marshaller_greet_AddProductRequest,
        __Marshaller_greet_AddProductResponse);

    static readonly grpc::Method<global::AukcioServer.BidRequest, global::AukcioServer.BidResponse> __Method_Bid = new grpc::Method<global::AukcioServer.BidRequest, global::AukcioServer.BidResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Bid",
        __Marshaller_greet_BidRequest,
        __Marshaller_greet_BidResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AukcioServer.AukcioReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BiddingApp</summary>
    [grpc::BindServiceMethod(typeof(BiddingApp), "BindService")]
    public abstract partial class BiddingAppBase
    {
      public virtual global::System.Threading.Tasks.Task<global::AukcioServer.LoginResponse> Login(global::AukcioServer.LoginRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::AukcioServer.LogoutResponse> Logout(global::AukcioServer.LogoutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::AukcioServer.ListResponse> List(global::AukcioServer.ListRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::AukcioServer.AddProductResponse> AddProduct(global::AukcioServer.AddProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::AukcioServer.BidResponse> Bid(global::AukcioServer.BidRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BiddingAppBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_Logout, serviceImpl.Logout)
          .AddMethod(__Method_List, serviceImpl.List)
          .AddMethod(__Method_AddProduct, serviceImpl.AddProduct)
          .AddMethod(__Method_Bid, serviceImpl.Bid).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BiddingAppBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AukcioServer.LoginRequest, global::AukcioServer.LoginResponse>(serviceImpl.Login));
      serviceBinder.AddMethod(__Method_Logout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AukcioServer.LogoutRequest, global::AukcioServer.LogoutResponse>(serviceImpl.Logout));
      serviceBinder.AddMethod(__Method_List, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AukcioServer.ListRequest, global::AukcioServer.ListResponse>(serviceImpl.List));
      serviceBinder.AddMethod(__Method_AddProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AukcioServer.AddProductRequest, global::AukcioServer.AddProductResponse>(serviceImpl.AddProduct));
      serviceBinder.AddMethod(__Method_Bid, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AukcioServer.BidRequest, global::AukcioServer.BidResponse>(serviceImpl.Bid));
    }

  }
}
#endregion
